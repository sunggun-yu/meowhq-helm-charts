{{ if .Values.secretFromExternalSecrets.enabled }}
{{ range $secret := $.Values.secretFromExternalSecrets.secrets -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ required "A name is required" $secret.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  secretStoreRef:
    kind: {{ $secret.secretStoreRef.kind | default "SecretStore" }}
    name: {{ $secret.secretStoreRef.name }}
  refreshInterval: {{ $secret.refreshInterval | default "1m" }}
  data:
  {{ range $data := $secret.data -}}
  - remoteRef:
      conversionStrategy: Default
      decodingStrategy: None
      key: {{ required "A valid key is required" $data.key }}
      property: {{ required "A valid property is required" $data.property }}
    secretKey: {{ required "A valid secretKey is required" $data.secretKey }}
  {{ end -}}
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    name: {{ $secret.name }}
    template:
      type: Opaque
      metadata:
        labels:
          argocd.argoproj.io/secret-type: {{ required "A valid secret type is required. value must be one of [repository, repo-creds]" $secret.type }}
      data:
        {{- toYaml $secret.targetData | nindent 8 }}
---
{{ end -}}
{{ end }}
